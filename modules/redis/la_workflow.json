{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "logicAppName": {
        "type": "string",
        "metadata": {
          "description": "The name for the logic app."
        }
      },
      "msteamsConnectionName": {
        "type": "string",
        "defaultValue": "teams",
        "metadata": {
          "description": "The name for the Microsoft Teams connection."
        }
      },
      "msTeamId": {
        "type": "string",
        "metadata": {
          "description": "The Microsoft teams id."
        }
      },
      "msTeamChannelId": {
        "type": "string",
        "metadata": {
          "description": "The Microsoft teams channel id."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "resourceTags": {
        "type": "object",
        "defaultValue": {
          "Environment": "Dev",
          "Project": "Tutorial"
      }
    }
    },
    "variables": {
      "resourceId": "[resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual')]",
      "apiVersion": "[providers('Microsoft.Logic', 'workflows').apiVersions[0]]"
    },
    "resources": [
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2018-07-01-preview",
        "location": "[parameters('location')]",
        "name": "[parameters('msteamsConnectionName')]",
        "properties": {
          "api": {
            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'teams')]"
          },
          "displayName": "teams"
        }
      },
      {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2019-05-01",
        "name": "[parameters('logicAppName')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/connections', parameters('msteamsConnectionName'))]"
        ],
        "location": "[parameters('location')]",
        "tags": "[parameters('resourceTags')]",
        "properties": {
          "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "$connections": {
                "defaultValue": {},
                "type": "Object"
              }
            },
            "triggers": {
              "manual": {
                "type": "Request",
                "kind": "Http",
                "inputs": {
                    "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "context": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "portalLink": {
                                        "type": "string"
                                    },
                                    "resourceName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "portalLink",
                                    "resourceName"
                                ],
                                "type": "object"
                            },
                            "status": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "status",
                            "context"
                        ],
                        "type": "object"
                    }
                }
            }
        },
        "actions": {
            "Condition": {
                "actions": {
                    "Post_message_in_a_chat_or_channel": {
                        "inputs": {
                            "body": {
                                "messageBody": "Alert with name *\"@{triggerBody()['data']['context']['name']}\"* was Triggered for *\"@{triggerBody()['data']['context']['resourceName']}\"* with Severity - @{triggerBody()['data']['context']['severity']}.(@{triggerBody()['data']['context']['portalLink']})",
                                "recipient": {
                                    "channelId": "[parameters('msTeamChannelId')]",
                                    "groupId": "[parameters('msTeamId')]"
                                }
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['teams']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('Flow bot')}/location/@{encodeURIComponent('Channel')}"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "else": {
                    "actions": {
                        "Post_message_in_a_chat_or_channel_2": {
                            "inputs": {
                                "body": {
                                    "messageBody": "Alert with name *\"@{triggerBody()['data']['context']['name']}\"* was Resolved for *\"@{triggerBody()['data']['context']['resourceName']}\"* with Severity - @{triggerBody()['data']['context']['severity']}.(@{triggerBody()['data']['context']['portalLink']})",
                                    "recipient": {
                                        "channelId": "[parameters('msTeamChannelId')]",
                                        "groupId": "[parameters('msTeamId')]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('Flow bot')}/location/@{encodeURIComponent('Channel')}"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        }
                    }
                },
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@{triggerBody()?['data']?['status']}",
                                "Activated"
                            ]
                        }
                    ]
                },
                "type": "If"
              }
            },
            "outputs": {}
          },
          "parameters": {
            "$connections": {
              "value": {
                "teams": {
                  "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'teams')]",
                  "connectionId": "[resourceId('Microsoft.Web/connections', parameters('msteamsConnectionName'))]"
                }
              }
            }
          }
        }
      }
    ],
    "outputs": {
      "endpointUrl": {
        "type": "string",
        "value": "[listCallbackUrl(variables('resourceId'), variables('apiVersion')).value]"
      }
    }
  }